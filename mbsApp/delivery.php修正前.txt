<?php
// DB接続のみ外部ファイル化
include 'db.php';

// POST処理：納品登録
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['deliver'])) {
    $selectedDetails = $_POST['order_detail_ids'] ?? [];

    if (!empty($selectedDetails)) {
        $pdo->beginTransaction();
        try {
            foreach ($selectedDetails as $detailId) {
                // 注文IDを取得
                $stmt = $pdo->prepare("SELECT yk_ordersID FROM orderdetail WHERE orderdetail_ID = :detail_id");
                $stmt->execute([':detail_id' => $detailId]);
                $order = $stmt->fetch(PDO::FETCH_ASSOC);

                if ($order) {
                    // 納品伝票を登録
                    $stmt = $pdo->prepare("
                        INSERT INTO deliverys (yk_ordersID)
                        VALUES (:order_id)
                    ");
                    $stmt->execute([
                        ':order_id' => $order['yk_ordersID']
                    ]);

                    // 直近の納品IDを取得
                    $deliverys_id = $pdo->lastInsertId();

                    // deliverydetailに登録
                    $stmt = $pdo->prepare("
                    INSERT INTO deliverydetail (yk_orderdetailID, yk_deliverysID)
                    VALUES (:orderdetail_id, :deliverys_id)
                    ");
                    $stmt->execute([
                        ':orderdetail_id' => $detailId,
                        ':deliverys_id' => $deliverys_id
                    ]);

                    // 注文明細の状態を更新
                    $stmt = $pdo->prepare("UPDATE orderdetail SET state = 'YES' WHERE orderdetail_ID = :detail_id");
                    $stmt->execute([':detail_id' => $detailId]);
                }
            }

            $pdo->commit();
            $message = "納品処理が完了しました。";
        } catch (Exception $e) {
            $pdo->rollBack();
            $error = "エラー: " . $e->getMessage();
        }
    } else {
        $error = "納品する商品を選択してください。";
    }
}
?>
<!DOCTYPE html>
<html lang="ja">

<head>
    <meta charset="UTF-8">
    <title>納品書作成</title>
    <link rel="stylesheet" href="仮画面/top/delivery/delivery_form.css">
</head>

<body>
    <header>
        <div class="logo-container">
            <div class="logo">緑橋書店</div>
            <div class="subtitle">納品書作成</div>
        </div>
        <div class="header-buttons">
            <button class="header-btn" type="button" onclick="location.href='delivery_list.php'">戻る</button>
            <input type="submit" form="deliveryForm" class="header-btn" value="保存">
        </div>
    </header>

    <main>
        <div class="delivery_form">
            <div class="form-header">
                <div class="title">納品書</div>
            </div>
            <form id="deliveryForm" method="post">
                <div class="recipient">
                    <select name="customer_id" id="customer_id" class="recipient-name" required
                        onchange="document.getElementById('deliveryForm').submit();">
                        <option value="">顧客を選択</option>
                        <?php
                        $customers = $pdo->query("SELECT customer_ID, name FROM customer")->fetchAll();
                        $selected_id = $_POST['customer_id'] ?? $_GET['customer_id'] ?? '';
                        foreach ($customers as $c) {
                            $selected = ($selected_id == $c['customer_ID']) ? 'selected' : '';
                            echo "<option value=\"{$c['customer_ID']}\" $selected>{$c['name']}</option>";
                        }
                        ?>
                    </select>
                    <span>様</span>
                </div>
                <div class="note">下記の通り納品いたしました</div>

                <table class="delivery-table">
                    <thead>
                        <tr>
                            <th></th>
                            <th>品名</th>
                            <th>数量</th>
                            <th>単価</th>
                            <th>金額（税込）</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php
                        // 顧客選択時のみ明細表示
                        $rows = [];
                        if (
                            ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['customer_id']) && is_numeric($_POST['customer_id'])) ||
                            (isset($_GET['customer_id']) && is_numeric($_GET['customer_id']))
                        ) {
                            $customer_id = $_POST['customer_id'] ?? $_GET['customer_id'];
                            $stmt = $pdo->prepare("
                                SELECT od.orderdetail_ID, o.orders_ID, od.title, od.quantity, od.value, od.description
                                FROM orderdetail od
                                JOIN orders o ON od.yk_ordersID = o.orders_ID
                                WHERE o.yk_customerID = :customer_id AND od.state = 'NO'
                            ");
                            $stmt->execute([':customer_id' => $customer_id]);
                            $rows = $stmt->fetchAll();
                        }
                        ?>
                        <?php
                        $sum_qty = 0;
                        $sum_value = 0;
                        $sum_total = 0;
                        if ($rows):
                            $i = 1;
                            foreach ($rows as $row):
                        ?>
                                <tr>
                                    <td class="row-number"><?= $i ?></td>
                                    <td>
                                        <?= htmlspecialchars($row['title']) ?>
                                        <input type="hidden" name="order_detail_ids[]" value="<?= $row['orderdetail_ID'] ?>">
                                    </td>
                                    <td><?= $row['quantity'] ?></td>
                                    <td><?= $row['value'] ?></td>
                                    <td><?= $row['value'] * $row['quantity'] ?></td>
                                    <td>
                                        <button type="button" class="removeRowBtn" style="background:#f66;color:#fff;">削除</button>
                                    </td>
                                </tr>
                            <?php
                                $sum_qty += $row['quantity'];
                                $sum_value += $row['value'];
                                $sum_total += $row['value'] * $row['quantity'];
                                $i++;
                            endforeach;
                        else:
                            ?>
                            <tr>
                                <td colspan="6" style="text-align:center;">表示できる納品明細がありません。</td>
                            </tr>
                        <?php endif; ?>
                        <!-- 合計行 -->
                        <tr>
                            <td></td>
                            <td class="bold">合計</td>
                            <td><input type="number" value="<?= $sum_qty ?>" readonly></td>
                            <td><input type="number" value="<?= $sum_value ?>" readonly></td>
                            <td><input type="number" value="<?= $sum_total ?>" readonly></td>
                            <td></td>
                        </tr>
                        <!-- 税率・消費税額 -->
                        <tr>
                            <td></td>
                            <td class="bottom-label">税率（％）</td>
                            <td>
                                <input type="number" id="tax_rate" name="tax_rate" value="10" min="0" max="100" style="width: 100%;">
                            </td>
                            <td class="bottom-label">消費税額</td>
                            <td>
                                <input type="number" id="tax_amount" name="tax_amount" value="<?= floor($sum_total * 0.1) ?>" readonly style="width: 100%;">
                            </td>
                            <td></td>
                        </tr>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td class="bottom-label">税込合計金額</td>
                            <td colspan="2">
                                <input type="number" id="total_with_tax" value="<?= $sum_total + floor($sum_total * 0.1) ?>" readonly style="width: 100%;">
                            </td>
                        </tr>
                    </tbody>
                </table>
                <!--<button type="submit" name="deliver" class="header-btn" style="margin-top:10px;">納品する</button> -->
            </form>
        </div>
    </main>
    <?php if (!empty($message)) echo "<p style='color:green;'>$message</p>"; ?>
    <?php if (!empty($error)) echo "<p style='color:red;'>$error</p>"; ?>

    <script>
        // 削除ボタンで明細行をformから削除
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.removeRowBtn').forEach(function(btn) {
                btn.addEventListener('click', function() {
                    const tr = btn.closest('tr');
                    tr.remove();
                    recalcTotals();
                });
            });

            // 税率変更時に再計算
            document.getElementById('tax_rate').addEventListener('input', recalcTotals);

            // 明細削除や税率変更時に合計・税額・税込合計を再計算
            function recalcTotals() {
                let sum_qty = 0;
                let sum_value = 0;
                let sum_total = 0;
                // 明細行を再取得
                document.querySelectorAll('.delivery-table tbody tr').forEach(function(row) {
                    const cells = row.querySelectorAll('td');
                    if (cells.length < 6) return; // 合計・税率行などはスキップ
                    // 数量・単価・金額
                    const qty = parseInt(cells[2].textContent) || 0;
                    const value = parseInt(cells[3].textContent) || 0;
                    const total = parseInt(cells[4].textContent) || 0;
                    sum_qty += qty;
                    sum_value += value;
                    sum_total += total;
                });
                document.querySelector('input[type="number"][readonly][value="<?= $sum_qty ?>"]').value = sum_qty;
                document.querySelector('input[type="number"][readonly][value="<?= $sum_value ?>"]').value = sum_value;
                document.querySelector('input[type="number"][readonly][value="<?= $sum_total ?>"]').value = sum_total;

                // 税率・税額・税込合計
                const taxRate = parseFloat(document.getElementById('tax_rate').value) || 0;
                const taxAmount = Math.floor(sum_total * (taxRate / 100));
                document.getElementById('tax_amount').value = taxAmount;
                document.getElementById('total_with_tax').value = sum_total + taxAmount;
            }
        });
    </script>
</body>

</html>